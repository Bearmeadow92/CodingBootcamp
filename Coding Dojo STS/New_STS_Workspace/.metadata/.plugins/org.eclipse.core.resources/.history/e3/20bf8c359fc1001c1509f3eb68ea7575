package com.jesse.yogacourse.models;

@Entity
@Table(name="courses")
public class Yoga {
	// MEMBER VARIABLES
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    @NotEmpty(message="Name is required")
    @Size(min=2, message="Name must be longer than 2 characters")
    private String name;
    
    @NotEmpty(message="Day of the week is required")
    private String dayOfWeek;
    
    @NotEmpty(message="Description is required")
    private String description;
    
    @NotNull(message="Price should be positive number")
    @(pattern="yyyy-MM-dd")
    private Integer dropInPrice;
    
    
    
    // RELATIONSHIPS
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name="user_id")
    private User creator;
    
    
    
    // CONSTRUCTORS
    
    public Recipe() {
    	
    }
    public Recipe(
			@NotEmpty(message = "Name is required") @Size(min = 2, message = "Name must be longer than 2 characters") String name,
			@NotEmpty(message = "Description is required") String description,
			@NotEmpty(message = "Instructions is required") String isntructions,
			@NotNull(message = "Date is Required") Date madeOn,
			@NotNull(message = "Under 30 min Required") boolean under30Minutes, User creator) {
		super();
		this.name = name;
		this.description = description;
		this.instructions = isntructions;
		this.madeOn = madeOn;
		this.under30Minutes = under30Minutes;
		this.creator = creator;
	}



	// GETTERS / SETTERS / OTHER METHODS
    
	@Column(updatable=false)
    @DateTimeFormat(pattern="yyyy-MM-dd")
    private Date createdAt;

	@DateTimeFormat(pattern="yyyy-MM-dd")
    private Date updatedAt;
	
    @PrePersist
    protected void onCreate(){
        this.createdAt = new Date();
    }
	@PreUpdate
    protected void onUpdate(){
        this.updatedAt = new Date();
    }